#include"stm32f4xx.h"
#define  PERIPR_BASE                                (0X40000000UL)
#define  AHB1PERIPR_OFFSET                          (0X00020000UL)
#define  AHB1PERIPR_BASE                            (PERIPR_BASE + AHB1PERIPR_OFFSET)
#define  GPIOA_OFFSET                               (0X0000UL)
#define  GPIOA_BASE                                 (AHB1PERIPR_BASE +GPIOA_OFFSET)
#define  RCC_OFFSET                                 (0X3800UL)
#define  RCC_BASE                                   (AHB1PERIPR_BASE + RCC_OFFSET)
#define  AHB1EN_R_OFFSET                            (0X30UL)
#define  RCC_AHB1EN_R                               (*(volatile unsigned int *)(RCC_BASE + AHB1EN_R_OFFSET))
#define  MOD_R_OFFSET                               (0X00UL)
#define  GPIOA_MOD_R                                (*(volatile unsigned int *)(GPIOA_BASE + MOD_R_OFFSET))
#define  OD_R_OFFSET                                (0X14UL)
#define  GPIOA_OD_R                                 (*(volatile unsigned int *)(GPIOA_BASE + OD_R_OFFSET))
#define  GPIOAEN                                    (1U<<0)
#define  PINS                                       (1U<<5)
#define  LED_PIN                                     PIN5

#define  __IO volatile
typedef struct
{
	__IO unit32_t MODER;
	__IO unit32_t DUMMY[4];
	__IO unit32_t ODR;
}GPIO_Typedef;


typedef struct
{
	__IO unit32_t DUMMY[12];
	__IO UNIT32_t AHB1ENR;
}RCC_Typedef;

#define GPIOA                                      ((GPIO_TypeDef*)(GPIOA_BASE))
#define RCC                                        ((RCC_TypeDef*)(RCC_BASE))

int main()
{
	RCC-> AHB1ENR |=GPIOAEN;
	GPIOA->MODER |=(1<<10);
	GPIOA->MODER &=~(1<<11);
	while(1)
	{
		GPIOA->ODR ^=LED_PIN;
		for(int i=0;i<1000;i++)
	}
}
	}
}
